#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
        hold-trigger-key-positions = <27 28 30 29>;
        hold-trigger-on-release;
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
        hold-trigger-on-release;
        hold-trigger-key-positions = <34 35 36 37>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&kp CLCK>;
            key-positions = <14 15 21>;
            layers = <0>;
        };
    };

    macros {
        mac_caf_9_hrs: mac_caf_9_hrs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp C &kp A &kp F &kp TAB &kp N9 &kp ENTER>;
            label = "MAC_CAF_9_HRS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp ESC           &kp N1        &kp N2        &kp N3  &kp N4     &kp N5    &kp C_VOLUME_UP  &kp N6     &kp N7         &kp N8     &kp N9            &kp N0         &kp DEL
&kp TAB           &kp Q         &kp W         &kp E   &kp R      &kp T     &kp C_VOL_DN     &kp Y      &kp U          &kp I      &kp O             &kp P          &lt 4 BSLH
&kp LEFT_CONTROL  &kp A         &kp S         &kp D   &kp F      &kp G     &bt BT_PRV       &kp H      &kp J          &kp K      &kp L             &kp SEMI       &kp APOS
&kp LSHFT         &lt 2 Z       &kp X         &kp C   &kp V      &kp B     &bt BT_NXT       &kp N      &kp M          &kp COMMA  &kp DOT           &lt 2 FSLH     &kp RIGHT_SHIFT
&kp C_MUTE        &kp LEFT_GUI  &kp LEFT_ALT  &mo 5   &kp SPACE  &mo 3     &to 1            &kp ENTER  &kp BACKSPACE  &mo 3      &kp LEFT_CONTROL  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        Home_row {
            display-name = "home row";
            bindings = <
&kp ESC           &kp N1           &kp N2           &kp N3               &kp N4             &kp N5     &kp C_VOLUME_UP  &kp N6       &kp N7             &kp N8               &kp N9             &kp N0              &kp DEL
&kp TAB           &kp Q            &kp W            &kp E                &kp R              &kp T      &kp C_VOL_DN     &kp Y        &kp U              &kp I                &kp O              &kp P               &lt 4 BSLH
&kp LEFT_CONTROL  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G      &bt BT_PRV       &kp H        &hmr LEFT_SHIFT J  &hmr LEFT_CONTROL K  &hmr LEFT_ALT L    &hmr LEFT_GUI SEMI  &kp APOS
&kp LSHFT         &lt 2 Z          &kp X            &kp C                &kp V              &kp B      &bt BT_NXT       &kp N        &kp M              &kp COMMA            &kp DOT            &lt 2 FSLH          &kp RIGHT_SHIFT
&kp C_MUTE        &kp LEFT_GUI     &kp LEFT_ALT     &mo 3                &kp SPACE          &kp TAB    &to 0            &lt 5 ENTER  &kp BACKSPACE      &mo 3                &kp RIGHT_CONTROL  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "HomeRow";
        };

        Nav {
            bindings = <
&trans  &kp F1      &kp F2    &kp F3    &kp F4     &kp F5           &kp C_VOLUME_UP   &kp F6      &kp F7    &kp F8  &kp F9     &kp F10  &kp DELETE
&trans  &trans      &kp HOME  &kp UP    &kp END    &kp PAGE_UP      &kp C_VOL_DN      &trans      &trans    &trans  &trans     &trans   &trans
&trans  &trans      &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN    &kp C_NEXT        &kp LEFT    &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&trans  &trans      &trans    &trans    &trans     &trans           &kp C_NEXT        &trans      &trans    &trans  &trans     &trans   &trans
&trans  &kp INSERT  &trans    &trans    &trans     &trans           &kp C_PLAY_PAUSE  &kp C_MUTE  &trans    &trans  &kp F11    &kp F12
            >;

            display-name = "Nav";
        };

        Symbol {
            bindings = <
&kp GRAVE  &kp N1         &kp N2        &kp N3         &kp N4        &kp N5           &trans  &kp N6     &kp N7     &kp N8         &kp N9            &kp N0         &trans
&kp TILDE  &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &trans  &kp MINUS  &kp EQUAL  &trans         &trans            &trans         &kp PIPE
&trans     &kp LS(CARET)  &kp LS(LPAR)  &kp LS(RPAR)   &kp LS(AMPS)  &kp LS(STAR)     &trans  &trans     &kp LSHFT  &kp LCTRL      &kp LALT          &kp RIGHT_GUI  &trans
&trans     &kp LS(AMPS)   &kp LBKT      &kp RBKT       &trans        &trans           &trans  &kp UNDER  &kp PLUS   &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION   &trans
&trans     &trans         &trans        &trans         &trans        &trans           &trans  &trans     &trans     &trans         &trans            &trans
            >;

            display-name = "Symbol";
        };

        System {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_BRI  &rgb_ug RGB_TOG  &trans  &trans  &trans      &trans       &trans
&trans  &trans        &trans          &trans        &trans        &trans          &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &trans  &trans  &trans      &trans       &trans
&trans  &trans        &trans          &trans        &trans        &trans          &bt BT_PRV       &rgb_ug RGB_EFR  &trans  &trans  &trans      &trans       &trans
&trans  &trans        &trans          &trans        &trans        &trans          &bt BT_NXT       &trans           &trans  &trans  &trans      &trans       &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &out OUT_TOG     &soft_off        &trans  &trans  &sys_reset  &bootloader
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "System";
        };

        Mac_shortcut {
            bindings = <
&trans  &trans  &kp LG(LS(N2))  &trans               &mt LG(LS(N4)) LG(LC(LS(N4)))  &kp LG(LS(N5))           &trans  &mac_caf_9_hrs           &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans               &trans                         &trans                   &trans  &trans                   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans               &trans                         &trans                   &trans  &trans                   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &mt LS(LG(C)) LG(C)  &kp LG(V)                      &trans                   &trans  &mt LA(LS(N)) LC(LA(N))  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans               &kp LG(SPACE)                  &kp LG(LS(LC(SPACE)))    &trans  &trans                   &trans  &trans  &trans  &trans
            >;

            display-name = "Mac";
        };
    };
};
